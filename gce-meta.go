package main

import (
	"fmt"
	"gopkg.in/urfave/cli.v1"
	"io/ioutil"
	"log"
	"net/http"
	"os"
	"strings"
)

var BaseUrl = "http://metadata.google.internal/computeMetadata/v1/instance/"

func run(name string) []byte {
	client := &http.Client{}
	request, _ := http.NewRequest("GET", BaseUrl+name, nil)
	request.Header.Set("Metadata-Flavor", "Google")
	response, err := client.Do(request)

	if err != nil {
		log.Fatalf("ERROR: %s", err)
	}

	body, err := ioutil.ReadAll(response.Body)
	if err != nil {
		log.Fatalf("ERROR: %s", err)
	}

	return body
}

func main() {
	// commands: description, hostname, id, machine-type, zone

	app := cli.NewApp()

	if len(os.Args) < 2 || len(os.Args) > 2 {
		app.Action = func(c *cli.Context) error {
			cli.ShowAppHelp(c)
			return nil
		}
	}

	app.Commands = []cli.Command{
		{
			Name:  "description",
			Usage: "The free-text description of an instance, assigned using the --description flag, or set in the API.",
			Action: func(c *cli.Context) error {
				fmt.Printf("%s\n", run("description"))
				return nil
			},
		},
		{
			Name:  "hostname",
			Usage: "The full host name of the instance.",
			Action: func(c *cli.Context) error {
				host := string(run("hostname"))
				split_res := strings.Split(host, ".")
				fmt.Printf("%s\n", split_res[0])
				return nil
			},
		},
		{
			Name:  "id",
			Usage: "The ID of the instance. This is a unique, numerical ID that is generated by Google Compute Engine.",
			Action: func(c *cli.Context) error {
				fmt.Printf("%s\n", run("id"))
				return nil
			},
		},
		{
			Name:  "machine-type",
			Usage: "The fully-qualified machine type name of the instance's host machine.",
			Action: func(c *cli.Context) error {
				fmt.Printf("%s\n", run("machine-type"))
				return nil
			},
		},
		{
			Name:  "zone",
			Usage: "The instance's zone.",
			Action: func(c *cli.Context) error {
				zone := string(run("zone"))
				split_res := strings.Split(zone, "/")
				fmt.Printf("%s\n", split_res[len(split_res)-1])
				return nil
			},
		},
	}

	app.Run(os.Args)
}
